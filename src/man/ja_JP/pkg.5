'\" te
.\" Copyright (c) 2009, 2014, Oracle and/or its affiliates.All rights reserved.
.TH pkg 5 "2014 年 4 月 10 日" "SunOS 5.12" "標準、環境、マクロ"
.SH 名前
pkg \- Image Packaging System
.SH 機能説明
.sp
.LP
Image Packaging System、\fBpkg\fR(5) は、ソフトウェアのライフサイクル管理 (インストール、アップグレード、および削除) のために提供されるフレームワークです。Image Packaging System は、一連のキーと値のペアおよび (場合によっては) データペイロードで定義されたアクションのコレクションである、パッケージの単位でソフトウェアを管理します。多くの場合、アクションはファイルシステム内に存在するファイルですが、ドライバ、サービス、ユーザーなどのその他のインストール可能オブジェクトも表します。
.SH パッケージの FMRI とバージョン
.sp
.LP
各パッケージは、スキーム \fBpkg:\fR を使用して、障害管理リソース識別子 (FMRI) によって表されます。パッケージの完全な FMRI は、次の形式のスキーム、パブリッシャー、パッケージ名、およびバージョン文字列で構成されます。
.sp
.in +2
.nf
pkg://solaris/system/library/c++-runtime@0.5.11,5.11-0.175.0.0.0.2.1:20120921T190358Z
.fi
.in -2
.sp

.sp
.LP
\fBsolaris\fR は発行元です。\fBsystem/library/c++-runtime\fR はパッケージ名です。名前空間は階層的であり、その深さは任意ですが、適用される包含関係は存在しません。名前は基本的に任意です。発行元情報はオプションですが、存在する場合は \fBpkg://\fR を前に付ける必要があります。パブリッシャーを含む FMRI は、しばしば「完全修飾」されていると言われます。パブリッシャー情報が存在しない場合、通常はパッケージ名の前に \fBpkg:/\fR が付けられます。
.sp
.LP
クライアントをパッケージ化すると、通常、FMRI にパブリッシャー情報が含まれていない場合に FMRI のスキームを省略できます。たとえば、\fBpkg:/system/library/c++-runtime\fR は \fBsystem/library/c++-runtime\fR と書くことができます。スキームが省略される場合、クライアントは照合の目的で、パッケージ名の最後のコンポーネントを除くすべてのコンポーネントを省略することもできます。たとえば、\fBsystem/library/c++-runtime\fR は \fBlibrary/c++-runtime\fR または \fBc++-runtime\fR と書くことができ、これらは \fBc++-runtime\fR という名前のパッケージまたは \fB/c++-runtime\fR で終わるパッケージ名に一致します。
.sp
.LP
パブリッシャーの名前によって、人、人のグループ、または組織が 1 つ以上のパッケージのソースとして識別されます。パブリッシャーの名前の競合を避け、パブリッシャーを識別しやすくするために、パッケージを公開するエンティティーを表すドメイン名をパブリッシャーの名前として使用することがベストプラクティスです。
.sp
.LP
パッケージ名のあとに、アットマーク記号 (@) で区切られたバージョンが続きます。バージョンは、句読文字で区切られた 4 つの数字の並びで構成されます。最初の 3 つの並びに含まれる要素はドットで区切られ、これらの並びの長さは任意です。バージョンコンポーネント内の先頭のゼロ (たとえば、01.1 または 1.01) は許可されません。末尾のゼロ (たとえば、1.10) は許可されます。
.sp
.LP
バージョンの最初の部分はコンポーネントバージョンです。オペレーティングシステムに緊密に結合されたコンポーネントの場合、これは通常、そのバージョンのオペレーティングシステムでの \fBuname -r\fR の値です。独自の開発ライフサイクルを持つコンポーネントの場合、この並びはドットで区切られたリリース番号 (2.4.10 など) です。
.sp
.LP
バージョンの 2 番目の部分 (存在する場合はコンマ (,) に続いている必要があります) はビルドバージョンです。ビルドバージョンは、パッケージの内容が構築されたオペレーティングシステムのバージョンを指定し、その内容が正常に実行されることを予測できるオペレーティングシステムのバージョンに関する最小の境界が提供されます。
.sp
.LP
バージョンの 3 番目の部分 (存在する場合はハイフン (\fB-\fR) に続いている必要があります) はブランチバージョンです。ブランチバージョンは、ベンダー固有の情報を提供するバージョン管理コンポーネントです。ブランチバージョンは、コンポーネントバージョンとは独立に、パッケージ化のメタデータが変更されたときに 1 増やすことができます。ブランチバージョンには、ビルド番号やその他の情報が含まれていることがあります。
.sp
.LP
バージョンの 4 番目の部分 (存在する場合はコロン (:) に続いている必要があります) はタイムスタンプです。タイムスタンプは、そのパッケージがいつ公開されたかを表します。
.sp
.LP
バージョン間の比較を実行する場合、その左側にあるコンポーネントが同じでないかぎり、バージョン全体のコンポーネントは考慮されません。したがって、\fB4.3\fR が \fB4.2\fR より大きいため、\fB4.3-1\fR は \fB4.2-7\fR より大きく、\fB3\fR が \fB1\fR より大きいため、\fB4.3-3\fR は \fB4.3-1\fR より大きくなります。
.sp
.LP
\fBpkg.human-version\fR 属性は、人間が読むことのできるバージョンの文字列を表示するために使用できます。\fBpkg.human-version\fR 属性の値は、パッケージ FMRI の前述のパッケージバージョンに追加して指定できますが、パッケージ FMRI バージョンを置き換えることはできません。人間が読むことのできるバージョンの文字列は、表示目的でのみ使用されます。詳細は、「設定アクション」を参照してください。
.sp
.LP
システムの多くの部分では、表示される情報量や必要な情報量を減らすために、必要に応じて FMRI を表示するときには短縮し、入力も短い形式を受け入れます。通常、スキーム、パブリッシャー、ビルドバージョン、およびタイムスタンプは省略できます。すべてのバージョン管理情報を省略できることもあります。
.SH アクション
.sp
.LP
アクションはシステム上のインストール可能オブジェクトを表します。アクションはパッケージのマニフェストに記述されます。すべてのアクションは、最初に名前とキー属性を含みます。また、これらはバージョン履歴をたどる過程で一意のオブジェクトを参照します。アクションには、このほかの属性も含まれます。一部の属性は、パッケージシステムによって直接解釈されます。その他の属性は、システム管理者またはエンドユーザーにのみ役立つ可能性があります。
.sp
.LP
アクションには、次の単純なテキスト表現があります。
.sp
.in +2
.nf
\fIaction_name\fR \fIattribute1\fR=\fIvalue1\fR \fIattribute2\fR=\fIvalue2\fR ...
.fi
.in -2

.sp
.LP
属性の名前に、空白、引用符、または等号 (=) を含めることはできません。最初の等号のあとの文字はすべて、値に属します。値にはすべての文字を含めることができますが、スペースは単一引用符または二重引用符で囲む必要があります。二重引用符で囲まれている文字列の内部で単一引用符をエスケープする必要はなく、単一引用符で囲まれている文字列の内部で二重引用符をエスケープする必要はありません。引用符の前にバックスラッシュ (\) 文字を付けて、引用文字列が終了しないようにすることができます。バックスラッシュは、バックスラッシュでエスケープできます。
.sp
.LP
アクションは複数の属性を含むことができます。一部の属性は、単一のアクションに対して異なる値を使用して、複数回名前を付けることができます。同じ名前を持つ複数の属性は、順序付けされていないリストとして扱われます。
.sp
.LP
多くの属性を持つアクションによって、マニフェストファイル内に長い行が作成されることがあります。このような行は、不完全な各行をバックスラッシュで終了することにより折り返すことができます。この継続文字は、属性と値のペアの間に置く必要があることに注意してください。属性も、その値も、さらにその組み合わせも分割することはできません。
.sp
.LP
下に示されている属性セットは、これがすべてではありません。実際、アクションに付加できる属性は任意であるため、標準の属性セットは、将来の開発を実装するために容易に拡張できます。
.sp
.LP
一部の属性によって、パッケージングコンテキストの外部で追加の操作が実行されます。これらの属性は、下の「アクチュエータ」のセクションで説明されています。
.SS "ファイルアクション"
.sp
.LP
\fBfile\fR アクションは、通常ファイルを表します。\fBfile\fR アクションはペイロードを参照し、次の 4 つの標準属性があります。
.sp
.ne 2
.mk
.na
\fB\fBpath\fR\fR
.ad
.RS 10n
.rt  
ファイルがインストールされているファイルシステムのパス。これは \fBfile\fR アクションのキー属性です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmode\fR\fR
.ad
.RS 10n
.rt  
ファイルのアクセス権 (数値形式)。これらは ACL ではなく、単純なアクセス権のみです。
.RE

.sp
.ne 2
.mk
.na
\fB\fBowner\fR\fR
.ad
.RS 10n
.rt  
ファイルを所有するユーザーの名前。
.RE

.sp
.ne 2
.mk
.na
\fB\fBgroup\fR \fR
.ad
.RS 10n
.rt  
ファイルを所有するグループの名前。
.RE

.sp
.LP
ペイロードは、名前が付けられないという点で位置属性です。これは、アクション名のあとの最初の単語です。公開されたマニフェストでは、これはファイルの内容の \fBSHA-1\fR ハッシュです。これから公開する必要のあるマニフェスト内に存在する場合は、ペイロードを見つけることのできるパスを表します。\fBpkgsend\fR(1) を参照してください。値に等号が含まれている場合は、位置属性の代わりにハッシュ属性を使用できます。この両方を同じアクションで使用できます。ただし、ハッシュは同じである必要があります。
.sp
.LP
\fBpreserve\fR 属性および \fBoverlay\fR 属性は、\fBfile\fR アクションがインストールされるかどうか、およびその方法に影響を及ぼします。
.sp
.ne 2
.mk
.na
\fB\fBpreserve\fR\fR
.ad
.sp .6
.RS 4n
パッケージ操作中にファイルを保持する時期と方法を指定します。
.sp
パッケージが最初にインストールされるとき、パッケージによって提供されるファイルが持つ \fBpreserve\fR 属性が何らかの値で定義されており、ファイルがイメージ内にすでに存在する場合、既存のファイルが \fB/var/pkg/lost+found\fR に格納され、パッケージされたファイルはインストールされます。
.sp
パッケージが最初にインストールされるとき、パッケージによって提供されるファイルの \fBpreserve\fR 属性が定義済みで、ファイルがイメージ内に存在しない場合、ファイルがインストールされるかどうかは \fBpreserve\fR 属性の値によって決まります。
.RS +4
.TP
.ie t \(bu
.el o
\fBpreserve\fR の値が \fBlegacy\fR である場合、パッケージされたファイルはインストールされません。
.RE
.RS +4
.TP
.ie t \(bu
.el o
\fBpreserve\fR の値が \fBlegacy\fR でない場合、パッケージされたファイルはインストールされます。
.RE
パッケージがダウングレードされるとき、ダウングレードされるバージョンのパッケージによって提供されるファイルの \fBpreserve\fR 属性が何らかの値で定義されており、次のすべての条件が真の場合、イメージ内に現在存在するファイルは拡張子 \fB\&.update\fR で名前変更され、ダウングレードされたパッケージからのファイルがインストールされます。
.RS +4
.TP
.ie t \(bu
.el o
ファイルがイメージ内に存在する。
.RE
.RS +4
.TP
.ie t \(bu
.el o
ダウングレードされるバージョンのパッケージによって提供されるファイルの内容が、現在インストールされているバージョンのパッケージによって提供されるファイルの内容と異なる。
.RE
.RS +4
.TP
.ie t \(bu
.el o
ダウングレードされるバージョンのパッケージによって提供されるファイルの内容が、イメージ内に存在するファイルの内容と異なる。
.RE
上の条件のいずれかが真でない場合、このファイルは、パッケージがダウングレードでなくアップグレードされる場合と同様に処理されます。
.sp
パッケージがアップグレードされるとき、アップグレードされるバージョンのパッケージによって提供される \fBfile\fR アクションの \fBpreserve\fR 属性が何らかの値で定義されており、\fBfile\fR アクションが、現在インストールされているバージョンのパッケージによって提供される \fBfile\fR アクションと同じである場合、ファイルはインストールされず、イメージ内に存在するファイルは変更されません。以前のバージョンをインストールしたあとに加えられたすべての変更が保持されます。
.sp
パッケージがアップグレードされるとき、アップグレードされるバージョンのパッケージによって提供される \fBfile\fR アクションの \fBpreserve\fR 属性が定義済みで、\fBfile\fR アクションが新しいか、現在インストールされているバージョンのパッケージによって提供される \fBfile\fR アクションとは異なる場合、アップグレードは次の方法で実行されます。
.RS +4
.TP
.ie t \(bu
.el o
イメージ内にファイルが存在しない場合は、新しいファイルがインストールされます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
アップグレードされるバージョンのパッケージによって提供されるファイルがイメージ内に存在し、現在インストール済みのバージョンのパッケージ内に存在せず、\fBoriginal_name\fR 属性 (以下を参照) を使用した名前変更または移動を行わなかった場合、既存のファイルは \fB/var/pkg/lost+found\fR に格納され、アップグレードされたバージョンのパッケージによって提供されるファイルがインストールされます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
アップグレードされるバージョンのパッケージによって提供されるファイルがイメージ内に存在し、現在インストール済みのバージョンのパッケージによって提供されるファイルと内容が異なる場合、アップグレードは \fBpreserve\fR 属性の値に従って実行されます。
.RS +4
.TP
.ie t \(bu
.el o
アップグレードされるバージョンのパッケージによって提供されるファイルの \fBpreserve\fR 値が \fBrenameold\fR の場合、既存のファイルは拡張子 \fB\&.old\fR を使用して名前変更され、新しいファイルは更新されたアクセス権およびタイムスタンプ (存在する場合) を使用してインストールされます。下の \fBtimestamp\fR 属性の説明を参照してください。
.RE
.RS +4
.TP
.ie t \(bu
.el o
アップグレードされるバージョンのパッケージによって提供されるファイルの \fBpreserve\fR 値が \fBrenamenew\fR の場合、新しいファイルは拡張子 \fB\&.new\fR を使用してインストールされ、既存のファイルは変更されません。
.RE
.RS +4
.TP
.ie t \(bu
.el o
アップグレードされるバージョンのパッケージによって提供されるファイルの \fBpreserve\fR 値が \fBtrue\fR の場合、新しいファイルはインストールされませんが、既存のファイルのアクセス権およびタイムスタンプ (存在する場合) がリセットされます。
.RE
.RE
.RS +4
.TP
.ie t \(bu
.el o
アップグレードされるバージョンのパッケージによって提供されるファイルがイメージ内に存在し、現在インストール済みのバージョンのパッケージによって提供されるファイルと同じ内容を持ち、\fBpreserve\fR 値が \fBrenameold\fR または \fBrenamenew\fR の場合、既存のファイルはアップグレードされたバージョンのパッケージによって提供されるファイルによって置き換えられ、アクセス権およびタイムスタンプ (存在する場合) も置き換えられます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
アップグレードされるバージョンのパッケージによって提供されるファイルがイメージ内に存在し、アップグレードされるパッケージ内の \fBpreserve\fR 値が \fBlegacy\fR で、現在インストール済みのバージョンのパッケージとは \fBpreserve\fR 値が異なる場合、既存のファイルは拡張子 \fB\&.legacy\fR を使用して名前変更され、新しいファイルは、更新されたアクセス権およびタイムスタンプ (存在する場合) を使用してインストールされます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
アップグレードされるバージョンのパッケージによって提供されるファイルがイメージ内に存在し、アップグレードされるパッケージと、現在インストール済みのバージョンのパッケージの両方で \fBpreserve\fR 値が \fBlegacy\fR の場合、既存のファイルのアクセス権およびタイムスタンプ (存在する場合) がリセットされます。
.RE
.RE

.sp
.ne 2
.mk
.na
\fB\fBoverlay\fR\fR
.ad
.sp .6
.RS 4n
このアクションによってほかのパッケージが同じ場所にファイルを提供できるか、またはそれによって別のファイルをオーバーレイすることを目的にしたファイルが提供されるかを指定します。この機能は、どの自己アセンブリにも参加しておらず (たとえば、\fB/etc/motd\fR)、かつ安全に上書きできる構成ファイルで使用されることを目的にしています。
.sp
\fBoverlay\fR が指定されていない場合は、複数のパッケージが同じ場所にファイルを提供することはできません。
.sp
\fBoverlay\fR 属性は、次のいずれかの値を持ちます。
.sp
.ne 2
.mk
.na
\fB\fBallow\fR\fR
.ad
.RS 9n
.rt  
もう 1 つのパッケージが同じ場所にファイルを配布できるようになります。\fBpreserve\fR 属性も同時に設定されていないかぎり、この値は意味を持ちません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBtrue\fR\fR
.ad
.RS 9n
.rt  
このアクションによって配布されたファイルは、\fBallow\fR を指定したほかのすべてのアクションを上書きします。
.RE

インストールされたファイルへの変更は、オーバーレイしているファイルの \fBpreserve\fR 属性の値に基づいて保持されます。削除時、ファイルの内容は、\fBpreserve\fR 属性が指定されたかどうかには関係なく、オーバーレイされているアクションがまだインストールされている場合は保持されます。別のファイルをオーバーレイできるのは 1 つのアクションだけであり、\fBmode\fR、\fBowner\fR、および \fBgroup\fR 属性が一致している必要があります。
.RE

.sp
.LP
ELF ファイルの場合、次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBelfarch\fR\fR
.ad
.sp .6
.RS 4n
ELF ファイルのアーキテクチャー。これは、そのファイルが構築されたアーキテクチャー上での \fBuname -p\fR の出力です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBelfbits\fR\fR
.ad
.sp .6
.RS 4n
これは \fB32\fR または \fB64\fR です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBelfhash\fR\fR
.ad
.sp .6
.RS 4n
これは、そのファイル内の「興味深い」ELF セクションのハッシュです。これらは、バイナリがロードされるときにメモリーにマップされるセクションです。これらは、2 つのバイナリの実行可能ファイルの動作が異なるかどうかを判定するときに考慮する必要のある唯一のセクションです。
.RE

.sp
.LP
\fBfile\fR アクションの場合、次の追加属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBoriginal_name\fR\fR
.ad
.sp .6
.RS 4n
この属性は、パッケージからパッケージに、または場所から場所に、あるいはその両方で移動している編集可能なファイルを処理するために使用されます。この形式は、元のパッケージの名前のあとに、コロンとこのファイルの元のパスが続きます。削除されているファイルはすべて、そのパッケージとパス、または \fBoriginal_name\fR 属性の値 (指定されている場合) のどちらかを使用して記録されます。\fBoriginal_name\fR 属性が設定された、インストールされている編集可能なファイルはすべて、それが同じパッケージ化の操作の一部として削除されている場合は、その名前のファイルを使用します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBrelease-note\fR\fR
.ad
.sp .6
.RS 4n
この属性は、このファイルにリリースノートテキストが含まれていることを示すために使用されます。この属性の値は、パッケージ FMRI です。元のイメージに存在し、元のイメージ内のパッケージよりも新しいバージョンのパッケージ名が FMRI で指定されている場合、このファイルはリリースノートに含まれます。特別な FMRI (\fBfeature/pkg/self\fR) は、含まれるパッケージを指します。\fBfeature/pkg/self\fR のバージョンが 0 の場合、このファイルは初期インストールのリリースノートにのみ含まれます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBrevert-tag\fR\fR
.ad
.sp .6
.RS 4n
この属性は、セットとして元に戻すべき編集可能なファイルをタグ付けするために使用されます。\fBrevert-tag\fR 属性の値は \fItagname\fR です。単一の \fBfile\fR アクションに対して複数の \fBrevert-tag\fR 属性を指定できます。これらのいずれかのタグを指定して \fBpkg revert\fR が呼び出されると、ファイルはマニフェストで定義された状態に戻ります。\fBpkg revert\fR コマンドの詳細については、\fBpkg\fR(1) マニュアルページを参照してください。
.sp
\fBrevert-tag\fR 属性は、ディレクトリレベルでも指定できます。後述の「ディレクトリアクション」を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBsysattr\fR\fR
.ad
.sp .6
.RS 4n
この属性は、このファイルに設定する必要があるシステム属性を指定するために使用されます。\fBsysattr\fR 属性の値は、次の例に示すように、詳細システム属性のカンマ区切りリストまたはコンパクトシステム属性オプションの文字列シーケンスの場合があります。サポートされるシステム属性は、\fBchmod\fR(1) マニュアルページで説明されています。マニフェストに指定されるシステム属性は、オペレーティングシステムのほかのサブシステムによって設定される場合があるシステム属性に追加で設定されます。
.sp
.in +2
.nf
file path=opt/secret_file sysattr=hidden,immutable
file path=opt/secret_file sysattr=Hi
.fi
.in -2

.RE

.sp
.ne 2
.mk
.na
\fB\fBtimestamp\fR\fR
.ad
.sp .6
.RS 4n
この属性は、ファイルに対するアクセスおよび変更時間を設定するために使用します。\fBtimestamp\fR 属性値は、コロンおよびハイフンを省略した、ISO-8601 形式の UTC で表現する必要があります。
.sp
\fBtimestamp\fR 属性は、Python 用の \fB\&.pyc\fR または \fB\&.pyo\fR ファイルをパッケージングする場合に不可欠です。\fB\&.pyc\fR または \fB\&.pyo\fR ファイルに関連する \fB\&.py\fR ファイルは、次の例で示すように、これらのファイル内に埋め込まれたタイムスタンプを使用してマーク付けする必要があります。
.sp
.in +2
.nf
file path=usr/lib/python2.6/vendor-packages/pkg/__init__.pyc ...
file path=usr/lib/python2.6/vendor-packages/pkg/__init__.py \e
     timestamp=20130311T221521Z ...
.fi
.in -2

.RE

.sp
.LP
\fBfile\fR アクションに対する次の属性はシステムによって自動的に生成されるため、パッケージ開発者によって指定しないでください。
.sp
.ne 2
.mk
.na
\fB\fBhash\fR\fR
.ad
.sp .6
.RS 4n
非圧縮ファイルの SHA-1 ハッシュ。
.RE

.sp
.ne 2
.mk
.na
\fB\fBchash\fR\fR
.ad
.sp .6
.RS 4n
圧縮ファイルの SHA-1 ハッシュ。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.size\fR\fR
.ad
.sp .6
.RS 4n
非圧縮ファイルのバイト単位のサイズ。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.csize\fR\fR
.ad
.sp .6
.RS 4n
圧縮ファイルのバイト単位のサイズ。
.RE

.SS "ディレクトリアクション"
.sp
.LP
\fBdir\fR アクションは、ファイルシステムオブジェクトを表すという点で \fBfile\fR アクションに似ています。\fBdir\fR アクションは、通常ファイルの代わりにディレクトリを表します。\fBdir\fR アクションには、\fBfile\fR アクションが持つのと同じ \fBpath\fR、\fBmode\fR、\fBowner\fR、および \fBgroup\fR 属性があり、\fBpath\fR がキー属性です。\fBdir\fR アクションは \fBrevert-tag\fR 属性も受け入れます。\fBrevert-tag\fR 属性の値は、\fBfile\fR アクションと \fBdir\fR アクションで異なります。
.sp
.LP
ディレクトリは、IPS でカウントされる参照です。あるディレクトリを明示的または暗黙的に参照している最後のパッケージが参照を行わなくなると、そのディレクトリは削除されます。そのディレクトリにパッケージ解除されたファイルシステムオブジェクトが含まれている場合、それらの項目は \fB$IMAGE_META/lost+found\fR に移動されます。\fB$IMAGE_META\fR についての詳細は、「ファイル」のセクションを参照してください。
.sp
.ne 2
.mk
.na
\fB\fBrevert-tag\fR\fR
.ad
.sp .6
.RS 4n
この属性は、セットとして削除する必要があるパッケージ解除されたファイルを識別するために使用します。\fBfile\fR アクションに対してこの属性を指定する方法についての説明は、上記の「ファイルアクション」を参照してください。ディレクトリの場合、\fBrevert-tag\fR 属性の値は \fItagname\fR\fB=\fR\fIpattern\fR です。単一の \fBdir\fR アクションに対して複数の \fBrevert-tag\fR 属性を指定できます。マッチングする \fItagname\fR を指定して \fBpkg revert\fR が呼び出されると、\fIpattern\fR に一致する (シェルグロビング文字を使用)、この \fBdir\fR ディレクトリの下にあるパッケージ解除されたファイルまたはディレクトリが削除されます。\fBpkg revert\fR コマンドの詳細については、\fBpkg\fR(1) マニュアルページを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBsalvage-from\fR\fR
.ad
.sp .6
.RS 4n
この属性は、パッケージ解除された内容を新しいディレクトリに移動する場合に使用できます。この属性の値は、回収された項目のディレクトリの名前です。\fBsalvage-from\fR 属性を持つディレクトリは、作成時に、\fBsalvage-from\fR 属性の値に指定されたディレクトリのすべての内容を継承します。
.RE

.SS "リンクアクション"
.sp
.LP
\fBlink\fR アクションはシンボリックリンクを表します。\fBlink\fR アクションには、次の標準属性があります。
.sp
.ne 2
.mk
.na
\fB\fBpath\fR\fR
.ad
.sp .6
.RS 4n
シンボリックリンクがインストールされるファイルシステムのパス。これは \fBlink\fR アクションのキー属性です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBtarget\fR \fR
.ad
.sp .6
.RS 4n
シンボリックリンクのターゲット。リンクの解決先のファイルシステムオブジェクト。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmediator\fR\fR
.ad
.sp .6
.RS 4n
特定のメディエーショングループ (たとえば、\fBpython\fR) に参加しているすべてのパス名によって共有されているメディエーション名前空間内のエントリを指定します。\fBmediator-version\fR または \fBmediator-implementation\fR、あるいはその両方に基づいてリンクメディエーションを実行できます。特定のパス名に対してメディエートされたリンクはすべて、同じメディエータを指定する必要があります。ただし、すべてのメディエータバージョンおよび実装が、特定のパスでリンクを提供する必要はありません。メディエーションがリンクを提供していない場合は、そのメディエーションが選択されたときにリンクが削除されます。特定のバージョンまたは実装、あるいはその両方と組み合わせた \fBmediator\fR は、パッケージシステムで使用するために選択できるメディエーションを表します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmediator-version\fR\fR
.ad
.sp .6
.RS 4n
\fBmediator\fR 属性で記述されたインタフェースの (負にならない整数のドットで区切られた並びとして表された) バージョンを指定します。この属性は、\fBmediator\fR が指定され、\fBmediator-implementation\fR は指定されていない場合に必要です。ローカルシステム管理者は、使用するバージョンを明示的に設定できます。指定された値は一般に、リンクを提供しているパッケージのバージョンに一致するようにしてください (たとえば、\fBruntime/python-26\fR は \fBmediator-version=2.6\fR を使用します)。ただし、これは必須ではありません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmediator-implementation\fR\fR
.ad
.sp .6
.RS 4n
\fBmediator-version\fR に加えて、またはこの代わりに使用するメディエータの実装を指定します。実装の文字列は順序付けられているとは見なされず、システム管理者によって明示的に指定されていない場合は、\fBpkg \fR(5) によって文字列が任意に選択されます。
.sp
この値は、英数字とスペースで構成された任意の長さの文字列にすることができます。実装自体をバージョン管理できるか、または実際にバージョン管理されている場合は、文字列の最後の @ のあとに (負にならない整数のドットで区切られた並びとして表された) バージョンを指定します。実装の複数のバージョンが存在する場合、デフォルトの動作では、最大のバージョンを持つ実装が選択されます。
.sp
特定のパスにある実装メディエーションリンクの 1 つのインスタンスだけがシステムにインストールされている場合は、その 1 つのインスタンスが自動的に選択されます。このパスにある将来のリンクがインストールされても、ベンダー、サイト、またはローカルのオーバーライドが適用されないかぎり、またはいずれかのリンクのバージョンがメディエートされた場合、このリンクは切り替えられません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmediator-priority\fR\fR
.ad
.sp .6
.RS 4n
メディエートされたリンクの競合を解決する場合、\fBpkg\fR(5) は通常、\fBmediator-version\fR の最大の値を持つリンクを選択するか、またはそれが不可能な場合は \fBmediator-implementation\fR に基づいて選択します。この属性は、正常な競合解決処理のためのオーバーライドを指定するために使用されます。
.sp
この属性が指定されていない場合は、デフォルトのメディエータ選択ロジックが適用されます。
.sp
この値が \fBvendor\fR である場合は、このリンクが、\fBmediator-priority\fR が指定されていないリンクより優先されます。
.sp
この値が \fBsite\fR である場合は、このリンクが、\fBvendor\fR の値を持つリンクや、\fBmediator-priority\fR が指定されていないリンクより優先されます。
.sp
ローカルシステム管理者は、上で説明した選択ロジックをオーバーライドできます。
.RE

.SS "ハードリンクアクション"
.sp
.LP
\fBhardlink\fR アクションは、ハードリンクを表します。このアクションは \fBlink\fR アクションと同じ属性を持ち、そのキー属性も同じく \fBpath\fR です。
.SS "ドライバアクション"
.sp
.LP
\fBdriver\fR アクションはデバイスドライバを表します。\fBdriver\fR アクションはペイロードを参照しません。ドライバファイル自体を \fBfile\fR アクションとしてインストールする必要があります。次の属性が認識されます (詳細は \fBadd_drv\fR(1M) を参照)。
.sp
.ne 2
.mk
.na
\fB\fBname\fR\fR
.ad
.sp .6
.RS 4n
ドライバの名前。多くの場合はドライババイナリのファイル名ですが、必ずしもそうとは限りません。これは \fBdriver\fR アクションのキー属性です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBalias\fR\fR
.ad
.sp .6
.RS 4n
これはドライバの別名を表します。特定のドライバが複数の \fBalias\fR 属性を持つことができます。特殊な引用符の規則は必要ありません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBclass\fR\fR
.ad
.sp .6
.RS 4n
これはドライバクラスを表します。特定のドライバが複数の \fBclass\fR 属性を持つことができます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBperms\fR\fR
.ad
.sp .6
.RS 4n
これは、ドライバのデバイスノードのファイルシステムアクセス権を表します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBclone_perms\fR\fR
.ad
.sp .6
.RS 4n
これは、このドライバに対する複製ドライバのマイナーノードのファイルシステムアクセス権を表します。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpolicy\fR\fR
.ad
.sp .6
.RS 4n
これは、デバイスのための追加のセキュリティーポリシーを指定します。特定のドライバが複数の \fBpolicy\fR 属性を持つことができますが、マイナーデバイスの指定が複数の属性に存在することはできません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBprivs\fR\fR
.ad
.sp .6
.RS 4n
これは、ドライバで使用される特権を指定します。特定のドライバが複数の \fBprivs\fR 属性を持つことができます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdevlink\fR\fR
.ad
.sp .6
.RS 4n
これは \fB/etc/devlink.tab\fR 内のエントリを指定します。この値はファイルに書き込まれる行そのものであり、タブは \fB\t\fR で示されます。詳細は、\fBdevlinks\fR(1M) を参照してください。特定のドライバが複数の \fBdevlink\fR 属性を持つことができます。
.RE

.SS "依存アクション"
.sp
.LP
\fBdepend\fR アクションは、パッケージ間の依存関係を表します。あるパッケージが別のパッケージに依存することがあります。たとえば、最初のパッケージの機能を有効にする (場合によってはインストールする) ために、2 番目のパッケージの機能が必要な場合があります。依存関係はオプションです。インストール時に依存関係が満たされない場合、パッケージシステムはほかの制約に応じて、依存パッケージをインストールするか、または十分に新しいバージョンに更新しようとします。
.sp
.LP
次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBfmri\fR\fR
.ad
.sp .6
.RS 4n
依存パッケージを表す FMRI。これは \fBdependency\fR アクションのキー属性です。\fBfmri\fR 値にパブリッシャーを含めることはできません。パッケージ名は完全であると見なされます。タイプ \fBrequire-any\fR の依存関係は、複数の \fBfmri\fR 属性を持つことができます。\fBfmri\fR 値でバージョンはオプションですが、依存関係のタイプによっては、バージョンのない \fBfmri\fR は無意味である場合があります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBtype\fR\fR
.ad
.sp .6
.RS 4n
依存関係のタイプ。
.sp
.ne 2
.mk
.na
\fB\fBrequire\fR\fR
.ad
.sp .6
.RS 4n
依存関係が必要であり、かつ \fBfmri\fR 属性で指定されたバージョン以上のバージョンを持っている必要があります。バージョンが指定されていない場合は、任意のバージョンが依存関係を満たします。パッケージの必要な依存関係のいずれかを満たすことができない場合、そのパッケージはインストールできません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBoptional\fR\fR
.ad
.sp .6
.RS 4n
依存関係が存在する場合は、指定されたバージョンレベル以上である必要があります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBexclude\fR\fR
.ad
.sp .6
.RS 4n
指定されたバージョンレベル以上という依存関係が存在する場合は、含んでいるパッケージをインストールできません。バージョンが指定されていない場合、依存パッケージは、依存関係を指定しているパッケージと同時にインストールできません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBincorporate\fR\fR
.ad
.sp .6
.RS 4n
依存関係はオプションですが、依存するパッケージのバージョンは制約されます。以下の「制約と凍結」を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBrequire-any\fR\fR
.ad
.sp .6
.RS 4n
複数の \fBfmri\fR 属性で指定された複数の依存パッケージのうちのいずれか 1 つが、依存関係のタイプ \fBrequire\fR と同じ規則に従って依存関係を満たすことができます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBconditional\fR\fR
.ad
.sp .6
.RS 4n
依存関係は、\fBpredicate\fR 属性で定義されたパッケージがシステム上に存在する場合にのみ必要です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBorigin\fR\fR
.ad
.sp .6
.RS 4n
このパッケージのインストールの前に、依存関係のターゲット (存在する場合) は変更されるイメージ上の指定された値以上である必要があります。\fBroot-image\fR 属性の値が \fBtrue\fR である場合、このパッケージをインストールするには、/ をルートとするイメージ上にターゲットが存在する必要があります。\fBroot-image\fR 属性の値が \fBtrue\fR で、\fBfmri\fR 属性の値が \fBpkg:/feature/firmware/\fR で始まる場合、\fBfmri\fR 値の残りの部分は、ファームウェアの依存関係を評価する \fB/usr/lib/fwenum\fR 内のコマンドとして扱われます。例については、「\fIPackaging and Delivering Software With the Image Packaging System\fR」を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBgroup\fR \fR
.ad
.sp .6
.RS 4n
依存関係は、パッケージがイメージ回避リスト上にないかぎり必要です。廃止されたパッケージは、暗黙のうちにグループの依存関係を満たすことに注意してください。\fBpkg\fR(1) の \fBavoid\fR サブコマンドを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBparent\fR\fR
.ad
.sp .6
.RS 4n
依存関係は、イメージが子イメージでない場合は無視されます。このイメージが子イメージである場合は、親イメージ内に依存関係が存在する必要があります。\fBparent\fR 依存関係でのパッケージバージョンの照合は、\fBincorporate\fR 依存関係で使用されるものと同じです。
.RE

.RE

.sp
.ne 2
.mk
.na
\fB\fBpredicate\fR\fR
.ad
.sp .6
.RS 4n
\fBconditional\fR 依存関係の述語を表す FMRI。
.RE

.sp
.ne 2
.mk
.na
\fB\fBroot-image\fR\fR
.ad
.sp .6
.RS 4n
先に説明した \fBorigin\fR 依存関係に対してのみ有効です。
.RE

.SS "ライセンスアクション"
.sp
.LP
\fBlicense\fR アクションは、パッケージの内容に関連したライセンスやその他の情報ファイルを表します。パッケージは \fBlicense\fR アクションの使用を通して、ライセンス、免責条項、またはその他のガイダンスをパッケージインストーラに提供できます。
.sp
.LP
\fBlicense\fR アクションのペイロードは、パッケージに関連したイメージメタデータディレクトリに提供され、人間が読める形式のテキストデータのみが含まれているべきです。HTML やその他の形式のマークアップが含まれていてはいけません。\fBlicense\fR アクションは、属性を通して、関連するペイロードが表示または同意、あるいはその両方を必要としていることをクライアントに示すことができます。表示または同意、あるいはその両方の方法は、クライアントに任されています。
.sp
.LP
次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBlicense\fR\fR
.ad
.sp .6
.RS 4n
これは \fBlicense\fR アクションのキー属性です。この属性は、ユーザーがライセンスのテキスト自体を読まなくてもその内容を判断できるように支援するための、ライセンスの意味のある説明を提供します。この値のいくつかの例を次に示します。
.RS +4
.TP
.ie t \(bu
.el o
ABC Co. Copyright Notice
.RE
.RS +4
.TP
.ie t \(bu
.el o
ABC Co. Custom License
.RE
.RS +4
.TP
.ie t \(bu
.el o
Common Development and Distribution License 1.0 (CDDL)
.RE
.RS +4
.TP
.ie t \(bu
.el o
GNU General Public License 2.0 (GPL)
.RE
.RS +4
.TP
.ie t \(bu
.el o
GNU General Public License 2.0 (GPL) Only
.RE
.RS +4
.TP
.ie t \(bu
.el o
MIT License
.RE
.RS +4
.TP
.ie t \(bu
.el o
Mozilla Public License 1.1 (MPL)
.RE
.RS +4
.TP
.ie t \(bu
.el o
Simplified BSD License
.RE
\fBlicense\fR 値は、パッケージ内で一意である必要があります。上のいくつかの例に示すように、説明にライセンスのバージョンを含めることをお勧めします。パッケージに複数のライセンスに基づくコードが含まれる場合、複数の \fBlicense\fR アクションを使用します。ライセンス属性値の長さは、64 文字以下にしてください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmust-accept\fR\fR
.ad
.sp .6
.RS 4n
\fBtrue\fR の場合は、関連するパッケージをインストールまたは更新するには、ユーザーがこのライセンスに同意する必要があります。この属性を省略すると、\fBfalse\fR と同等になります。同意の方法 (たとえば、対話型または構成ベース) は、クライアントに任されています。パッケージの更新については、ライセンスアクションまたはペイロードが変更されていない場合、この属性は無視されます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmust-display\fR\fR
.ad
.sp .6
.RS 4n
\fBtrue\fR の場合は、パッケージ化の操作中に、クライアントがこのアクションのペイロードを表示する必要があります。この値を省略すると、\fBfalse\fR と同等になります。この属性は、コピーライト表示に使用しないでください。この属性は、操作中に表示する必要のある実際のライセンスまたはその他の素材にのみ使用してください。表示の方法は、クライアントに任されています。パッケージの更新については、ライセンスアクションまたはペイロードが変更されていない場合、この属性は無視されます。
.RE

.SS "レガシーアクション"
.sp
.LP
\fBlegacy\fR アクションは、従来のパッケージシステムで使用されるパッケージデータを表します。このアクションに関連付けられた属性は、従来のシステムのデータベースに追加されます。そのため、これらのデータベースに問い合わせを行なっているツールは、従来のパッケージが実際にインストールされているかのように動作できます。特にこれにより、\fBpkg\fR 属性で指定されたパッケージがシステムにインストールされていることを従来のシステムに十分に確信させることができるため、このパッケージを、依存関係を満たすために使用できるようになります。
.sp
.LP
\fBpkginfo\fR(4) のパラメータに従って指定された次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBcategory\fR\fR
.ad
.sp .6
.RS 4n
\fBCATEGORY\fR パラメータの値。デフォルト値は \fBsystem\fR です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdesc\fR\fR
.ad
.sp .6
.RS 4n
\fBDESC\fR パラメータの値。
.RE

.sp
.ne 2
.mk
.na
\fB\fBhotline\fR\fR
.ad
.sp .6
.RS 4n
\fBHOTLINE\fR パラメータの値。
.RE

.sp
.ne 2
.mk
.na
\fB\fBname\fR\fR
.ad
.sp .6
.RS 4n
\fBNAME\fR パラメータの値。デフォルト値は \fBnone provided\fR です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg\fR\fR
.ad
.sp .6
.RS 4n
インストールされるパッケージの略語。デフォルト値は、パッケージの FMRI の名前です。これは \fBlegacy\fR アクションのキー属性です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBvendor\fR\fR
.ad
.sp .6
.RS 4n
\fBVENDOR\fR パラメータの値。
.RE

.sp
.ne 2
.mk
.na
\fB\fBversion\fR\fR
.ad
.sp .6
.RS 4n
VERSION パラメータの値。デフォルト値は、パッケージの FMRI のバージョンです。
.RE

.SS "設定アクション"
.sp
.LP
\fBset\fR アクションは、パッケージの説明などの、パッケージレベルの属性 (またはメタデータ) を表します。
.sp
.LP
次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBname\fR\fR
.ad
.RS 9n
.rt  
属性の名前。
.RE

.sp
.ne 2
.mk
.na
\fB\fBvalue\fR\fR
.ad
.RS 9n
.rt  
属性に与えられた値。
.RE

.sp
.LP
\fBset\fR アクションは、パッケージ作成者が選択した任意のメタデータを提供できます。ただし、パッケージシステムにとって特別な意味を持つ、適切に定義された属性名がいくつか存在します。
.sp
.ne 2
.mk
.na
\fB\fBinfo.classification\fR\fR
.ad
.sp .6
.RS 4n
\fBpkg\fR(5) クライアントがパッケージを分類するために使用できる 1 つ以上のトークン。この値には、スキーム (「org.opensolaris.category.2008」や「org.acm.class.1998」など) と実際の分類 (「アプリケーション/ゲーム」など) がコロン (:) で区切られて含まれています。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.description\fR\fR
.ad
.sp .6
.RS 4n
パッケージの内容と機能の詳細な説明。通常は、1 つの段落程度の長さです。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.fmri\fR\fR
.ad
.sp .6
.RS 4n
含まれるパッケージの名前とバージョン。「説明」セクションの「パッケージの FMRI とバージョン」を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.human-version\fR\fR
.ad
.sp .6
.RS 4n
IPS によって使用されるバージョンスキームは厳格です。「説明」セクションの「パッケージの FMRI とバージョン」を参照してください。より柔軟性のあるバージョンを \fBpkg.human-version\fR 属性の値として指定できます。値は IPS ツール (\fBpkg info\fR、\fBpkg contents\fR、\fBpkg search\fR など) によって表示されます。\fBpkg.human-version\fR の値はバージョン比較のベースとして使用されず、\fBpkg.fmri\fR バージョンの代わりに使用することはできません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.obsolete\fR\fR
.ad
.sp .6
.RS 4n
\fBtrue\fR の場合、パッケージは廃止としてマークされています。廃止されたパッケージには、ほかの設定アクション以外のアクションは存在せず、また名前変更としてマークすることはできません。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.renamed\fR\fR
.ad
.sp .6
.RS 4n
\fBtrue\fR の場合は、パッケージの名前が変更されました。このパッケージには、このパッケージの名前が変更された先のパッケージバージョンを指す 1 つ以上の \fBdepend\fR アクションも存在する必要があります。パッケージを名前変更と廃止の両方としてマークすることはできませんが、それ以外は任意の数の設定アクションが存在できます。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpkg.summary\fR\fR
.ad
.sp .6
.RS 4n
パッケージの短い、1 行の説明。
.RE

.SS "グループアクション"
.sp
.LP
\fBgroup\fR アクションは、\fBgroup\fR(4) で定義されるのと同様の UNIX グループを定義します。グループパスワードのサポートはありません。このアクションで定義されたグループには最初、ユーザーリストがありません。ユーザーは、\fBuser\fR アクションを使用して追加できます。次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBgroupname\fR\fR
.ad
.sp .6
.RS 4n
グループの名前の値。
.RE

.sp
.ne 2
.mk
.na
\fB\fBgid\fR\fR
.ad
.sp .6
.RS 4n
グループの一意の数値 ID。デフォルト値は、100 未満の最初に空いているグループです。
.RE

.SS "ユーザーアクション"
.sp
.LP
\fBuser\fR アクションは、\fB/etc/passwd\fR、\fB/etc/shadow\fR、\fB/etc/group\fR、および \fB/etc/ftpd/ftpusers\fR ファイルで定義されるのと同様の UNIX ユーザーを定義します。この \fBuser\fR アクションで定義されたユーザーについて、エントリが適切なファイルに追加されます。
.sp
.LP
\fBuser\fR アクションは、デーモンまたは使用するほかのソフトウェアのためにユーザーを定義することを目的としています。管理または対話アカウントを定義する目的で \fBuser\fR アクションを使用しないでください。
.sp
.LP
次の属性が認識されます。
.sp
.ne 2
.mk
.na
\fB\fBusername\fR\fR
.ad
.sp .6
.RS 4n
ユーザーの一意の名前。
.RE

.sp
.ne 2
.mk
.na
\fB\fBpassword\fR\fR
.ad
.sp .6
.RS 4n
ユーザーの暗号化パスワード。デフォルト値は \fB*LK*\fR です。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBuid\fR\fR
.ad
.sp .6
.RS 4n
ユーザーの一意の UID。デフォルト値は、100 未満の最初に空いている値です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBgroup\fR \fR
.ad
.sp .6
.RS 4n
ユーザーのプライマリグループの名前。\fB/etc/group\fR に存在する必要があります。
.RE

.sp
.ne 2
.mk
.na
\fB\fBgcos-field\fR\fR
.ad
.sp .6
.RS 4n
\fB/etc/passwd\fR 内の \fBgcos\fR フィールドの値。デフォルト値は \fBusername\fR です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBhome-dir\fR\fR
.ad
.sp .6
.RS 4n
ユーザーのホームディレクトリ。このディレクトリはシステムイメージディレクトリ内にある必要があり、\fB/home\fR などの別のマウントポイントの下であってはいけません。デフォルト値は \fB/\fR です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBlogin-shell\fR\fR
.ad
.sp .6
.RS 4n
ユーザーのデフォルトのシェル。デフォルト値は空です。
.RE

.sp
.ne 2
.mk
.na
\fB\fBgroup-list\fR\fR
.ad
.sp .6
.RS 4n
ユーザーが属しているセカンダリグループ。\fBgroup\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBftpuser\fR\fR
.ad
.sp .6
.RS 4n
\fBtrue\fR または \fBfalse\fR に設定できます。\fBtrue\fR のデフォルト値は、ユーザーが FTP 経由のログインを許可されていることを示します。\fBftpusers\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBlastchg\fR\fR
.ad
.sp .6
.RS 4n
1970 年 1 月 1 日と、パスワードが最後に変更された日付の間の日数。デフォルト値は空です。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmin\fR \fR
.ad
.sp .6
.RS 4n
パスワード変更の間の必要な最小日数。パスワードの有効期限を有効にするには、このフィールドを 0 以上に設定する必要があります。デフォルト値は空です。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBmax\fR \fR
.ad
.sp .6
.RS 4n
パスワードが有効な最大日数。デフォルト値は空です。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBwarn\fR\fR
.ad
.sp .6
.RS 4n
パスワードの期限が切れる前にユーザーに警告が表示される日数。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBinactive\fR\fR
.ad
.sp .6
.RS 4n
そのユーザーに許可されている非活動の日数。これはマシンごとにカウントされます。最終ログインに関する情報は、そのマシンの \fBlastlog\fR ファイルから取得されます。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBexpire\fR\fR
.ad
.sp .6
.RS 4n
UNIX エポック (1970 年 1 月 1 日) 以降の日数として表される絶対的な日付。この日数に達すると、ログインを使用できなくなります。たとえば、13514 の期限切れの値は、ログインの有効期限が 2007 年 1 月 1 日であることを指定します。\fBshadow\fR(4) を参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBflag\fR\fR
.ad
.sp .6
.RS 4n
空に設定されています。\fBshadow\fR(4) を参照してください。
.RE

.SH アクチュエータ
.sp
.LP
コンテキストによっては、特定のアクションの準備として、またはその導入のあとに、追加の操作を実行することが適している場合があります。これらの追加の操作はオペレーティングシステムに固有のもので、一般にライブシステムイメージ上でのみ必要です。ライブイメージは、現在のゾーンのアクティブな実行中のブート環境の \fB/\fR にマウントされたイメージです。パッケージのインストールまたは削除に関与する複数のアクションのアクチュエータが同一である場合、アクチュエータの存在に対応する操作は、そのインストールまたは削除に対して 1 回実行されます。
.sp
.LP
アクチュエータを誤って指定すると、そのアクチュエータがインストールを安全に進めるための手段を決定できない場合、パッケージのインストールが失敗することがあります。
.sp
.LP
次のアクチュエータが定義されています。
.sp
.ne 2
.mk
.na
\fB\fBreboot-needed\fR\fR
.ad
.sp .6
.RS 4n
\fBtrue\fR または \fBfalse\fR に設定できます。このアクチュエータは、パッケージシステムがライブイメージ上で動作している場合、タグ付きアクションの更新または削除を新しいブート環境で実行する必要があることを宣言します。新しいブート環境の作成は、\fBbe-policy\fR イメージプロパティーによって制御されます。\fBbe-policy\fR プロパティーについての詳細は、\fBpkg\fR(1) のマニュアルページの「イメージプロパティー」セクションを参照してください。
.RE

.sp
.ne 2
.mk
.na
\fB\fBdisable_fmri\fR、\fBrefresh_fmri\fR、\fBrestart_fmri\fR、\fBsuspend_fmri\fR\fR
.ad
.sp .6
.RS 4n
これらの各アクチュエータは、パッケージのインストールまたは削除中に操作するサービスインスタンスの FMRI の値を取ります。\fBdisable_fmri\fR を指定すると、\fBsvcadm\fR(1M) の \fBdisable\fR サブコマンドに従って、アクションの削除の前に特定の FMRI が無効になります。\fBrefresh_fmri\fR および \fBrestart_fmri\fR を指定すると、\fBsvcadm\fR(1M) の対応するサブコマンドに従って、アクションのインストール、更新、または削除のあとに特定の FMRI が更新または再起動されます。最後に、\fBsuspend_fmri\fR を指定すると、アクションのインストールフェーズの前に特定の FMRI が一時的に無効になり、そのフェーズが完了したあとに有効になります。
.sp
この値には、複数のサービスインスタンスに一致するパターンを含めることができます。ただし、それをインスタンスを示さずに暗黙的に行うのではなく、\fBsvcs\fR(1) によって受け入れられた glob を使用して明示的に行う必要があります。
.RE

.SH メディエーション
.sp
.LP
メディエータは、一連の関連するシンボリックリンクまたはハードリンクを表す名前です。2 つ以上のリンクアクションが同じパスとメディエータ名を持つ場合、ユーザーまたはパッケージシステムは、バージョン、実装、または優先度に基づいてリンクターゲットを選択します。メディエータ属性については、「リンクアクション」を参照してください。
.sp
.LP
次の例は、リンクがバージョンによって選択される、\fBjava\fR という名前のメディエータの 2 つの異なるインスタンスを示しています。これらの 2 つの \fBlink\fR アクションは 2 つの異なるパッケージに出現します。
.sp
.in +2
.nf
link mediator=java mediator-version=1.6 path=usr/java target=jdk/jdk1.6.0_31
link mediator=java mediator-version=1.7 path=usr/java target=jdk/jdk1.7.0_02
.fi
.in -2

.sp
.LP
このリンクパスのバージョンを選択する方法については、\fBpkg\fR(1) のマニュアルページの \fBset-mediator\fR サブコマンドを参照してください。バージョンを選択するには、両方のパッケージがインストールされている必要があります。
.SH 制約と凍結
.sp
.LP
パッケージが新しいバージョンに移行される場合、またはシステムに追加されたり、システムから削除されたりする場合、選択されるバージョンや、削除が許可されるかどうかは、そのパッケージに対するさまざまな制約によって決定されます。これらの制約は、依存関係の形式でほかのパッケージが定義するか、または凍結の形式で管理者が定義できます。
.sp
.LP
制約のもっとも一般的な形式は、上の「依存アクション」で説明したように、\fBrequire\fR 依存関係によって提供されます。このような制約によって、パッケージがダウングレードまたは削除されることが回避されます。
.sp
.LP
オペレーティングシステムのほとんどの部分は、\fBincorporation\fR と呼ばれるパッケージによってカプセル化されています。これらのパッケージは主に、\fBincorporate\fR 依存関係によって表される制約を提供します。
.sp
.LP
上で説明したように、組み込まれたパッケージがシステム上に存在する必要はありませんが、存在する場合は、包括的な最小バージョンと排他的な最大バージョンの両方を指定します。たとえば、依存する FMRI のバージョンが 1.4.3 の場合、1.4.3 未満のバージョンは依存関係を満たさず、1.4.4 以上のバージョンでも依存関係を満たしません。ただし、1.4.3.7 など、単にドット形式の数列を拡張したバージョンは許可されます。
.sp
.LP
incorporation は、システムの各部の同期的なアップグレードを強制的に行うために使用されます。C ライブラリやカーネルなどの一部のコンポーネントでは、これは基本的な要件です。ほかには依存関係が存在しない単純なユーザーランドコンポーネントなどのその他のコンポーネントでは、incorporation の特定のバージョンから参照できるテストされた、既知の一連のパッケージバージョンを提供するためだけに、同期アップグレードが使用されます。
.sp
.LP
incorporation は単なるパッケージであるため、削除することができ、それが提供しているすべての制約がそれによって緩和されます。ただし、その緩和は安全ではないため、Oracle Solaris によって提供される多くの incorporation が、それらの incorporation によって組み込まれているパッケージには必要です。
.sp
.LP
パッケージを、インストール済みの incorporation によって許可されていないバージョンにアップグレードしようとしても、要求を満たすためにその incorporation の新しいバージョンを見つけようとする試みは行われず、そのアップグレードは失敗します。制約自体を移動する必要があるが、それを指定している incorporation を削除できない場合は、その incorporation を、制約の目的のバージョンを指定するバージョンにアップグレードする必要があります。incorporation をアップグレードすると、その新しいバージョンによって提供される制約を満たさない組み込まれたパッケージもすべてアップグレードされます。
.sp
.LP
システム管理者は、\fBpkg freeze\fR コマンドを使用してパッケージを制約できます。バージョンが指定されていない場合、指定されたパッケージは、システムにインストールされているバージョンに制約されます。バージョン管理されたパッケージが指定された場合、この管理上の制約 (つまり、凍結) は、\fBfmri\fR 属性が指定されたパッケージバージョンの値を持った状態で incorporate 依存関係がインストールされているかのように機能します。
.sp
.LP
凍結がパッケージシステムによって自動的に解除されることはありません。制約を緩和するには、\fBpkg unfreeze\fR コマンドを使用します。
.SH 発行元とリポジトリ
.sp
.LP
上で詳細に説明したように、パブリッシャーとは単に、パッケージクライアントがパッケージのプロバイダを識別するために使用する名前です。パブリッシャーは、パッケージリポジトリまたはパッケージアーカイブ、あるいはその両方を使用してパッケージを配布できます。現在パッケージシステムでサポートされているリポジトリのタイプには、起点リポジトリとミラーリポジトリの 2 つがあります。
.sp
.LP
\fB起点\fRは、1 つ以上のパッケージのすべてのメタデータ (カタログ、マニフェスト、検索インデックスなど) と内容 (ファイル) を含むパッケージリポジトリです。イメージ内の特定のパブリッシャーに対して複数の起点が構成されている場合、パッケージクライアント API は、パッケージデータの取得元として最適な起点を選択しようとします。これはもっとも一般的なタイプのリポジトリであり、パッケージリポジトリ上で \fBpkgsend\fR または \fBpkgrecv\fR が使用された場合は常に、暗黙的に作成されます。
.sp
.LP
\fBミラー\fRは、パッケージの内容 (ファイル) のみを含むパッケージリポジトリです。イメージ内の特定のパブリッシャーに対して 1 つ以上のミラーが構成されている場合、クライアント API はパッケージ内容の取得のためのミラーを優先し、パッケージの内容の取得元として最適なミラーを選択しようとします。ミラーが到達不可能か、必要な内容が含まれていないか、またはより低速な場合、クライアント API は、構成されているいずれかの起点リポジトリから内容を取得します。ミラーは、\fBpkg.depotd\fR(1M) の動的ミラー機能を使用している、信頼できる一連のクライアント間の内容共有に使用されることを目的にしています。ミラーはまた、パッケージのメタデータへのアクセスを認証するために使用されることも目的にしています。ただし、パッケージの内容は認証なしで配布します。たとえば、あるクライアントが、アクセスするには SSL キーと証明書のペアが必要な \fBhttps\fR 起点と、パッケージの内容を提供する \fBhttp\fR ミラーを使用して構成される可能性があります。このようにして、認可クライアントだけがパッケージをインストールまたは更新できるようにしながら、パッケージ内容の取得のための認証のオーバーヘッドが回避されます。ミラーは、\fBfile\fR という名前のサブディレクトリとその親を除く、リポジトリのすべてのサブディレクトリを削除することによって作成できます。また、\fBpkg.depotd\fR(1M) のミラーモードを使用すると、起点リポジトリもミラーとしてプロビジョニングできます。
.SH 大域ゾーンと非大域ゾーンの更新
.sp
.LP
\fBpkg\fR システムは、非大域ゾーンを強制的に大域ゾーンと同期された状態に保持します。つまり、同じカーネルが確実に実行されるようにするために、特定のパッケージを大域ゾーンとすべての非大域ゾーンで同じバージョンにする必要があります。このために、\fBpkg\fR は \fBparent\fR 依存関係を使用して、非大域ゾーンに特定の制約を課します。\fBparent\fR 依存関係についての詳細は、上の「依存アクション」を参照してください。
.sp
.LP
大域ゾーンが非大域ゾーンに課す制限のため、非大域ゾーンは大域ゾーンのパッケージにアクセスできる必要があり、かつ同様の発行元構成にする必要があります。これらの目的はどちらも、\fBシステムリポジトリ\fR を使用して実現されます (\fBpkg.sysrepo\fR(1M) のマニュアルページを参照)。システムリポジトリは、大域ゾーン内で構成された発行元へのアクセスと、これらの発行元が構成されている方法に関する情報を提供します。インストールまたは更新中に非大域ゾーンで別のパッケージが選択されないようにするために、発行元の検索順序で、システム発行元には非大域ゾーン内で構成された発行元より高くランク付けされます。発行元の検索順序については、\fBpkg\fR(1) のマニュアルページの \fBpkg set-publisher\fR コマンドを参照してください。
.sp
.LP
システム上のすべての非大域ゾーンを更新するには、大域ゾーン内で \fBpkg update\fR コマンドを引数なしで使用します。このコマンドは大域ゾーンに対して、また各非大域ゾーンに対して再帰的に動作します。非大域ゾーンを大域ゾーン内で行われた変更と同期された状態にするために、非大域ゾーンに対して必要な最小の変更が加えられます。たとえば、パッケージ \fBfoo\fR が大域ゾーンと非大域ゾーンの両方にバージョン 1 でインストールされており、システムリポジトリ内でバージョン 2 が使用可能であると想定します。\fBfoo\fR に親の依存関係が存在する場合、\fBparent\fR 依存関係によってパッケージは強制的に同期された状態に保持されるため、\fBpkg update foo\fR は \fBfoo\fR を大域ゾーンと非大域ゾーンの両方でバージョン 2 に更新します。\fBfoo\fR に親の依存関係が存在しない場合、\fBfoo\fR は大域ゾーンでバージョン 2 に更新されますが、非大域ゾーンではバージョン 1 のままになります。
.SH ファセットとバリアント
.sp
.LP
ソフトウェアには、省略可能なコンポーネントや、相互に排他的なコンポーネントが含まれることがあります。省略可能なコンポーネントの例には、ロケールやドキュメントがあります。相互に排他的なコンポーネントの例には、SPARC バイナリと x86 バイナリや、デバッグバイナリと非デバッグバイナリなどがあります。
.sp
.LP
IPS では、省略可能なコンポーネントを\fBファセット\fR、相互に排他的なコンポーネントを\fBバリアント\fRと呼びます。ファセットとバリアントはパッケージアクションのタグとして指定します。各ファセットタグおよびバリアントタグには名前と値があります。1 つのアクションに複数のファセットタグおよびバリアントタグを付けることができます。複数のファセットおよびバリアントタグのあるコンポーネントの例には、開発者によって使われるアーキテクチャー固有のヘッダーファイルや SPARC 大域ゾーン専用のコンポーネントなどがあります。
.sp
.LP
バリアントタグの例は \fBvariant.arch=sparc\fR です。ファセットタグの例は \fBfacet.devel=true\fR です。ファセットとバリアントは、\fBfacet.\fR や \fB variant.\fR を先頭に付けずに参照されることがよくあります。
.sp
.LP
ファセットとバリアントはイメージの特殊なプロパティーであり、個々のパッケージには設定できません。イメージに設定されたファセットおよびバリアントの現在の値を表示するには、\fBpkg\fR(1) のマニュアルページに示すように、\fBpkg facet\fR コマンドと \fBpkg variant\fR コマンドを使用します。イメージに設定されたファセットおよびバリアントの値を変更するには、\fBpkg change-facet\fR コマンドと \fB pkg change-variant\fR コマンドを使用します。
.sp
.LP
ファセットは、パッケージクライアントによってブール値として扱われ、ファセットは、イメージ内で \fBtrue\fR (有効) または \fBfalse\fR (無効) にのみ設定できます。デフォルトで、イメージ内のすべてのファセットは、\fBtrue\fR に設定されていると見なされます。
.sp
.LP
ファセットは、\fBpkg change-facet\fR コマンドを使用してイメージ内でローカルに設定するか、親イメージから継承することができます。たとえば、非大域ゾーンは大域ゾーンからファセットを継承できます。継承されたファセットは、ローカルで設定されたファセットよりも先に評価され、優先されます。同じファセットが、継承もローカル設定もされた場合、継承されたファセット値によって、ローカルで設定された値がマスクされます。マスクされたファセットは、ファセットの評価とパッケージアクションに影響しません。\fBpkg change-facet\fR コマンドを使用して行われるファセット変更は、ローカルで設定されたファセットにのみ影響します。継承されたファセットは、親イメージ内で変更を行うことによってのみ変更できます。デフォルトでは、\fBpkg facet\fR コマンドはマスクされたファセットを表示しません。
.sp
.LP
ファセットが設定されたアクションをクライアントがフィルタ処理する方法を制御するために、アクションのファセットタグの値を \fBall\fR または \fBtrue\fR に設定できます。\fBall\fR または \fBtrue\fR 以外のすべての値では、未定義の動作が発生します。ファセットタグを持つアクションをインストールするために、イメージ内に存在する必要のある条件の説明については以下を参照してください。
.sp
.LP
ファセットに対する \fBall\fR 値は、単一レベルを超えるフィルタリングが必要な場合に便利です。次の例で、\fBdoc\fR ファセットと、\fBlocale\fR ファセットの少なくとも 1 つが、イメージ内で \fBtrue\fR の場合のみ、\fBfoo.txt\fR がインストールされます。これにより、管理者はドキュメントを除外しつつ、特定のロケールのサポートを有効化または無効化できます。さらに、\fBdoc\fR ファセットと \fBdevel\fR ファセットの両方がイメージ内で \fBtrue\fR の場合のみ、\fBapi.txt\fR がインストールされます。
.sp
.in +2
.nf
file path=usr/share/doc/foo/foo.txt facet.doc=all facet.locale.en_GB=true facet.locale.en_US=true
file path=usr/share/doc/foo/api.txt facet.doc=all facet.devel=all
.fi
.in -2

.sp
.LP
イメージに設定されるファセットは、\fBdoc.man\fR などの完全なファセットか、\fBlocale.*\fR などのパターンになります。これは、ファセット名前空間の一部を無効にし、その中の個々のファセットのみを有効にする場合に役立ちます。たとえば、次の例に示すように、すべてのロケールを無効にしてから、1 つか 2 つの特定のロケールのみを有効にすることができます。
.sp
.in +2
.nf
# \fBpkg change-facet locale.*=false\fR
[output about packages being updated]
# \fBpkg change-facet locale.en_US=true\fR
[output about packages being updated]
.fi
.in -2
.sp

.sp
.LP
ほとんどのバリアントは任意の数の値を設定できます。たとえば、\fBarch\fR バリアントには、\fBi386\fR、\fBsparc\fR、\fBppc\fR、\fBarm\fR、またはディストリビューションでサポートされているどんなアーキテクチャーでも設定できます。(Oracle Solaris では \fBi386\fR と \fBsparc\fR のみが使用されます。)例外は \fBdebug\fR バリアントです。\fBdebug\fR バリアントには、\fBtrue\fR または \fBfalse\fR のみを設定でき、ほかの値では動作が不確定になります。ファイルアクションに非デバッグバージョンとデバッグバージョンの両方がある場合、次の例に示すように、両方のバージョンに該当する \fBdebug\fR バリアントが明示的に設定されている必要があります。
.sp
.in +2
.nf
file group=sys mode=0644 overlay=allow owner=root \e
  path=etc/motd pkg.csize=115 pkg.size=103 preserve=true \e
  variant.debug.osnet=true

file group=sys mode=0644 overlay=allow owner=root \e
  path=etc/motd pkg.csize=68 pkg.size=48 preserve=true \e
  variant.debug.osnet=false
.fi
.in -2

.sp
.LP
バリアントを使用するパッケージをインストールするために、バリアント値をイメージに設定する必要があります。\fBarch\fR および \fBzone\fR バリアントは、イメージを作成し、その初期コンテンツをインストールするプログラムによって設定されます。イメージ内の \fBdebug.*\fR バリアントはデフォルトで \fBfalse\fR です。
.sp
.LP
イメージに設定されたファセットとバリアントは、特定のアクションがインストールされるかどうかに影響します。
.RS +4
.TP
.ie t \(bu
.el o
ファセットまたはバリアントタグのないアクションは常にインストールされます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
ファセットタグのあるアクションは、次の条件がイメージ内に存在する場合にインストールされます。
.RS +4
.TP
.ie t \(bu
.el o
\fBall\fR 値を持つアクションのすべてのファセットタグが、イメージ内で \fBtrue\fR である (\fBtrue\fR がデフォルトです)。
.RE
.RS +4
.TP
.ie t \(bu
.el o
アクションのいずれかのファセットタグが、\fBtrue\fR の値を持つ場合、イメージ内のこれらのファセットの少なくとも 1 つが \fBtrue\fR である。
.RE
.RE
.RS +4
.TP
.ie t \(bu
.el o
バリアントタグのあるアクションは、すべてのバリアントタグの値がイメージに設定されている値と同じ場合にのみインストールされます。
.RE
.RS +4
.TP
.ie t \(bu
.el o
ファセットタグとバリアントタグの両方があるアクションは、ファセットとバリアントの両方でアクションのインストールが許可されている場合にインストールされます。
.RE
.sp
.LP
カスタムのファセットタグと \fBvariant.debug.*\fR バリアントタグを作成できます。詳細については、「\fIPackaging and Delivering Software With the Image Packaging System\fR」を参照してください。Oracle Solaris では、次のタグが一般に使用されます。
.sp

.sp
.TS
tab();
cw(2.75i) cw(2.75i) 
lw(2.75i) lw(2.75i) 
.
バリアント名取り得る値
_
\fBvariant.arch\fR\fBsparc\fR、\fBi386\fR
\fBvariant.opensolaris.zone\fR\fBglobal\fR、\fBnonglobal\fR
\fBvariant.debug.*\fR\fBtrue\fR、\fBfalse\fR
.TE

.sp
.LP
次のリストに、Oracle Solaris で使用される小さなファセットタグの例を示します。
.sp
.in +2
.nf
facet.devel             facet.doc
facet.doc.html          facet.doc.info
facet.doc.man           facet.doc.pdf
facet.locale.de         facet.locale.en_GB
facet.locale.en_US      facet.locale.fr
facet.locale.ja_JP      facet.locale.zh_CN
.fi
.in -2

.SH イメージポリシー
.sp
.LP
イメージポリシーはブール値を持つイメージプロパティーによって定義されます。\fBflush-content-cache-on-success\fR および \fBsend-uuid\fR プロパティーについてとそれらの値の表示および変更方法については、\fBpkg\fR(1) のマニュアルページのイメージプロパティーに関する項目を参照してください。
.SH ファイル
.sp
.LP
\fBpkg\fR(5) イメージはより大きなファイルシステム内に任意に配置できるため、トークン \fB$IMAGE_ROOT\fR を使用して相対パスが区別されます。標準的なシステムインストールでは、\fB$IMAGE_ROOT\fR は / と同等です。
.sp
.ne 2
.mk
.na
\fB\fB$IMAGE_ROOT/var/pkg\fR\fR
.ad
.sp .6
.RS 4n
完全または部分的なイメージのメタデータディレクトリ。
.RE

.sp
.ne 2
.mk
.na
\fB\fB$IMAGE_ROOT/.org.opensolaris,pkg\fR\fR
.ad
.sp .6
.RS 4n
ユーザーイメージのメタデータディレクトリ。
.RE

.sp
.LP
特定のイメージのメタデータ内の特定のファイルおよびディレクトリに、修復や復旧中に役立つ情報を含めることができます。トークン \fB$IMAGE_META \fR は、メタデータが含まれる最上位ディレクトリを参照するために使用されます。通常、\fB $IMAGE_META\fR は前述の 2 つのパスのいずれかです。
.sp
.ne 2
.mk
.na
\fB\fB$IMAGE_META/lost+found\fR\fR
.ad
.sp .6
.RS 4n
パッケージ操作中に移動された、競合するディレクトリおよびファイルの場所。
.RE

.sp
.ne 2
.mk
.na
\fB\fB$IMAGE_META/publisher\fR\fR
.ad
.sp .6
.RS 4n
パブリッシャーごとに 1 つのディレクトリが含まれます。各ディレクトリにはパブリッシャー固有のメタデータが格納されます。
.RE

.sp
.LP
\fB$IMAGE_META\fR ディレクトリ階層内のその他のパスは非公開であり、変更される可能性があります。
.SH 属性
.sp
.LP
次の属性については、\fBattributes\fR(5) を参照してください。
.sp

.sp
.TS
tab() box;
cw(2.75i) |cw(2.75i) 
lw(2.75i) |lw(2.75i) 
.
属性タイプ属性値
_
使用条件\fBpackage/pkg\fR
_
インタフェースの安定性不確実
.TE

.SH 関連項目
.sp
.LP
\fBpkg\fR(1), \fBpkgsend\fR(1), \fBpkg.depotd\fR(1M), \fBpkg.sysrepo\fR(1M), \fBsvcs\fR(1), \fBsvcadm\fR(1M)
.sp
.LP
\fI『Adding and Updating Software in Oracle Solaris 11.2 』\fR
.sp
.LP
\fI『Copying and Creating Package Repositories in Oracle Solaris 11.2 』\fR
.sp
.LP
\fI『Packaging and Delivering Software With the Image Packaging System 』\fR
.sp
.LP
\fBhttps://github.com/sonicle/xstream-pkg5-gate/\fR
